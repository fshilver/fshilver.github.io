<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Notepad</title><link>https://hsyang.net/en/posts/</link><description>Recent content in Posts on Notepad</description><generator>Hugo -- gohugo.io</generator><language>ko</language><atom:link href="https://hsyang.net/en/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>How to secure nginx docker container</title><link>https://hsyang.net/en/posts/docker-security-nginx/</link><pubDate>Tue, 18 Jan 2022 00:16:14 +0900</pubDate><guid>https://hsyang.net/en/posts/docker-security-nginx/</guid><description>Goal Rootless mode Read only file system Linux Capabilities https://man7.org/linux/man-pages/man7/capabilities.7.html Prepare conf file nginx.conf worker_processes 1; error_log /dev/stderr warn; pid /tmp/nginx.pid; events { worker_connections 1024; } http { include /etc/nginx/mime.types; default_type application/octet-stream; log_format main &amp;#39;$remote_addr $status $request_time &amp;#34;$request&amp;#34; &amp;#39; &amp;#39;$body_bytes_sent &amp;#34;$http_referer&amp;#34; &amp;#39; &amp;#39;&amp;#34;$http_user_agent&amp;#34; &amp;#34;$http_x_forwarded_for&amp;#34;&amp;#39;; access_log /dev/stdout main; sendfile on; keepalive_timeout 65; error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 /error.</description></item><item><title>Linux command - dcmdump / dicom file dump</title><link>https://hsyang.net/en/posts/cli-dcmdump/</link><pubDate>Wed, 29 Dec 2021 01:17:41 +0900</pubDate><guid>https://hsyang.net/en/posts/cli-dcmdump/</guid><description>DCMTK version: 3.6.5 Sample dicom file name : sample.dcm Print all tags ~$ dcmdump sample.dcm # Dicom-File-Format # Dicom-Meta-Information-Header # Used TransferSyntax: Little Endian Explicit (0002,0000) UL 216 # 4, 1 FileMetaInformationGroupLength (0002,0001) OB 00\01 # 2, 1 FileMetaInformationVersion (0002,0002) UI =BreastTomosynthesisImageStorage # 30, 1 MediaStorageSOPClassUID (0002,0003) UI [1.2.840.113845.13.6533.1581875921.128629056237121] # 50, 1 MediaStorageSOPInstanceUID (0002,0010) UI =JPEGLossless:Non-hierarchical-1stOrderPrediction # 22, 1 TransferSyntaxUID (0002,0012) UI [1.2.276.0.7230010.3.0.3.6.5] # 28, 1 ImplementationClassUID (0002,0013) SH [OFFIS_DCMTK_365] # 16, 1 ImplementationVersionName .</description></item><item><title>Git Branch Cheatsheet</title><link>https://hsyang.net/en/posts/git-branch/</link><pubDate>Mon, 29 Nov 2021 23:22:06 +0900</pubDate><guid>https://hsyang.net/en/posts/git-branch/</guid><description>Creating creating branch from current commit
~$ git checkout -b &amp;lt;new branch&amp;gt; # example # branch name : my-branch ~$ git checkout -b my-branch creating branch from specific tag
~$ git checkout -b &amp;lt;new branch&amp;gt; &amp;lt;tag&amp;gt; # example # branch name : my-branch # tag : 1.1.0 ~$ git checkout -b my-branch 1.1.0 pulling remote branch
~$ git checkout -b &amp;lt;local branch name&amp;gt; &amp;lt;remote branch name&amp;gt; # example # local branch name : local-my-branch # remote branch name : origin/my-branch ~$ git checkout -b local-my-branch origin/my-branch pulling remote branch (using same branch name)</description></item><item><title>How to install and configure AWS CLI (Things to know when using AWS CLI)</title><link>https://hsyang.net/en/posts/aws-cli-configure/</link><pubDate>Sun, 26 Sep 2021 09:00:27 +0900</pubDate><guid>https://hsyang.net/en/posts/aws-cli-configure/</guid><description>Installation There are two versions of AWS CLI. Of course, version 2 is the latest version, so let&amp;rsquo;s install version 2. For installation, refer to the official AWS guide. It&amp;rsquo;s very simple.
https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html After installation, you can enter the follwinng command in the terminal to check whether it is installed properly and which version is installed.
aws --version # Windows 10 aws-cli/2.2.39 Python/3.8.8 Windows/10 exe/AMD64 prompt/off # Mac aws-cli/2.</description></item><item><title>Fixing Dll File Not Found on Windows (msvcp.dll, msvcr.dll, etc)</title><link>https://hsyang.net/en/posts/how-to-fix-dll-file-not-found/</link><pubDate>Sat, 11 Sep 2021 15:12:26 +0900</pubDate><guid>https://hsyang.net/en/posts/how-to-fix-dll-file-not-found/</guid><description>Issue Cannot find DLL files when running a program on Windows OS.
Environment Windows 10 Solution Install Redistributable package provided by Microsoft.
Steps There are several Redistributable packages. You should install the appropriate package according to the DLL file name.
DLL File Name Redistributable Package Name msvcp140.dll Microsoft Visual C++ 2015 Redistributable msvcp120.dll Microsoft Visual C++ 2013 Redistributable msvcp110.</description></item><item><title>Git Commit Cheatsheet</title><link>https://hsyang.net/en/posts/git-commit/</link><pubDate>Sun, 15 Nov 2020 23:18:21 +0900</pubDate><guid>https://hsyang.net/en/posts/git-commit/</guid><description>Cancel commit # cancel last commit. keep changes. ~$ git reset HEAD^ # cancel last 2 commits. keep changes. ~$ git reset HEAD~2 # remove last 2 commits with working tree ~$ git reset --hard HEAD~2 # cancel merged commit ~$ git reset --hard ORIG_HEAD # undo commit as new commit ~$ git revert HEAD # change last commit message ~$ git commit --amend # show diff when commit ~$ git commit -v # squash last 2 commits ~$ git rebase -i HEAD~2 # split commits ~$ git rebase -i HEAD~2 Cherry-pick Merge specific commits from new-feature branch to master branch # checkout to new-feature ~$ git checkout new-feature ~$ git log f0607f24c104b01b9dd2b603bf3c4aa25f90386a commit meesage 2 # &amp;lt;- what I want to cherry-pick 10d84f621e027a59b0c27a255f891aa4c078b06c commit message 1 ~$ git checkout master ~$ git cherry-pick f0607f24c104b01b9dd2b603bf3c4aa25f90386a Change author Reference : https://makandracards.</description></item><item><title>Git Tag Cheatsheet</title><link>https://hsyang.net/en/posts/git-tag/</link><pubDate>Sat, 14 Nov 2020 16:39:51 +0900</pubDate><guid>https://hsyang.net/en/posts/git-tag/</guid><description>Add tag # add tag to latest commit ~$ git tag v1.5.1.2 # add tag to specific commit ~$ git tag v1.5.1.2 446e2c10555ccbaa5cd4006b250d7d2135dbc2b0 Remove tag # local ~$ git tag -d 1.7.2 # remote ~$ git push origin :tags/1.7.2 Overwrite tag # local ~$ git tag -f 1.8.0 ~$ git tag -f 1.8.0 &amp;lt;commit id&amp;gt; # remote ~$ git push -f --tags Push tag to origin # push specific tag # git push &amp;lt;remote name&amp;gt; &amp;lt;tag&amp;gt; ~$ git push origin 1.</description></item><item><title>Git Submodule Cheatsheet</title><link>https://hsyang.net/en/posts/git-submodule/</link><pubDate>Sat, 14 Nov 2020 16:27:53 +0900</pubDate><guid>https://hsyang.net/en/posts/git-submodule/</guid><description>Add submodule # see submodule list ~$ git submodule # add submodule ~$ git submodule add &amp;lt;remote repository&amp;gt; &amp;lt;local dir&amp;gt; Update submodule # before git 1.8 ~$ cd project # git repository ~$ cd sub1 # assume sub1 is submodule ~$ git pull # get latest sub1 ~$ cd .. ~$ git add sub1 ~$ git commit -m &amp;#39;update submodule&amp;#39; # after git 1.8 ~$ cd project ~$ git submodule update --remote --merge Remove submodule ~$ SUBMODULE_DIR=themes/ananke/ ~$ git submodule deinit -f $SUBMODULE_DIR ~$ git rm -rf $SUBMODULE_DIR ~$ rm -rf .</description></item></channel></rss>