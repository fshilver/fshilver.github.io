<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>howto on 메모장</title><link>https://hsyang.net/categories/howto/</link><description>Recent content in howto on 메모장</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Mon, 29 Nov 2021 23:22:06 +0900</lastBuildDate><atom:link href="https://hsyang.net/categories/howto/index.xml" rel="self" type="application/rss+xml"/><item><title>[명령어] git branch</title><link>https://hsyang.net/posts/git-branch/</link><pubDate>Mon, 29 Nov 2021 23:22:06 +0900</pubDate><guid>https://hsyang.net/posts/git-branch/</guid><description>생성 현재 commit에서 branch 생성 ~$ git checkout -b &amp;lt;new branch&amp;gt; # 예제 # branch 이름 : my-branch ~$ git checkout -b my-branch 특정 tag에서 branch 생성 ~$ git checkout -b &amp;lt;new branch&amp;gt; &amp;lt;tag&amp;gt; # 예제 # branch 이름 : my-branch # tag : 1.1.0 ~$ git checkout -b my-branch</description></item><item><title>[명령어] git commit</title><link>https://hsyang.net/posts/git-commit/</link><pubDate>Sun, 15 Nov 2020 23:18:21 +0900</pubDate><guid>https://hsyang.net/posts/git-commit/</guid><description>commit 취소 # 최종 커밋을 취소. 워킹트리는 보존됨. (커밋은 했으나 push하지 않은 경우 사용) ~$ git reset HEAD^ # 마지막 2개의 커밋을 취소. 워킹트리는 보존됨. ~$ git reset</description></item><item><title>[명령어] git tag</title><link>https://hsyang.net/posts/git-tag/</link><pubDate>Sat, 14 Nov 2020 16:39:51 +0900</pubDate><guid>https://hsyang.net/posts/git-tag/</guid><description>tag 추가 # 가장 최신 커밋에 Tag 추가 ~$ git tag v1.5.1.2 # 특정 커밋에 Tag 추가 ~$ git tag v1.5.1.2 446e2c10555ccbaa5cd4006b250d7d2135dbc2b0 tag 삭제 # 로컬 Repo에서 삭제 ~$ git tag -d 1.7.2 # 원격 Repo에서 삭제 ~$ git push origin :tags/1.7.2 tag 덮어</description></item><item><title>[명령어] git submodule</title><link>https://hsyang.net/posts/git-submodule/</link><pubDate>Sat, 14 Nov 2020 16:27:53 +0900</pubDate><guid>https://hsyang.net/posts/git-submodule/</guid><description>submodule 추가 # submodule 목록 보기 ~$ git submodule # submodule 추가 ~$ git submodule add &amp;lt;remote repository&amp;gt; &amp;lt;local dir&amp;gt; submodule 업데이트 # git 버전 1.8 이전 ~$ cd project # git repository ~$ cd sub1 # assume sub1 is submodule ~$ git pull # get latest sub1 ~$ cd .. ~$ git add sub1 ~$ git commit -m &amp;#39;update submodule&amp;#39;</description></item></channel></rss>