<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pytest on 메모장</title><link>https://hsyang.net/tags/pytest/</link><description>Recent content in pytest on 메모장</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Mon, 08 Aug 2022 23:42:05 +0900</lastBuildDate><atom:link href="https://hsyang.net/tags/pytest/index.xml" rel="self" type="application/rss+xml"/><item><title>[Python] pytest 팁</title><link>https://hsyang.net/posts/pytest-tip/</link><pubDate>Mon, 08 Aug 2022 23:42:05 +0900</pubDate><guid>https://hsyang.net/posts/pytest-tip/</guid><description>임시 파일 사용하기 config_manager.py import json class ConfigManager: def __init__(self, file_path): with open(file_path, &amp;#39;r&amp;#39;) as f: config = json.load(f) for k, v in config.items(): setattr(self, k, v) test_config_manager.py import json import pytest @pytest.fixture(scope=&amp;#34;session&amp;#34;) def config_file(tmp_path_factory): config = { &amp;#34;setting&amp;#34;: 1, } dir = tmp_path_factory.mktemp(&amp;#34;config&amp;#34;) config_file = dir / &amp;#34;config_file.json&amp;#34; with open(config_file, &amp;#34;w&amp;#34;) as f: json.dump(config, f) return config_file def test_load_migrated_config(config_file): config = ConfigManager(file_path=config_file) assert config.setting</description></item></channel></rss>